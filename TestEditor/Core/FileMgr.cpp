#include <stdafx.h>
#include "FileMgr.h"

///////////////////////////////////////////////////////////////////////////////
FileMgr::FileMgr()
	: current_(nullptr)
{
}

///////////////////////////////////////////////////////////////////////////////
void FileMgr::AddFile(const wxString& path, const wxImage& file)
{
	auto it = files_.try_emplace(path, WorkFile(path, file));
	current_ = &it.first->second;
}

///////////////////////////////////////////////////////////////////////////////
WorkFile* FileMgr::GetCurrent()
{
	return current_;
}

///////////////////////////////////////////////////////////////////////////////
void FileMgr::SaveCurrent()
{
	SaveCurrentAs(current_->GetPath());
}

///////////////////////////////////////////////////////////////////////////////
void FileMgr::CloseCurrent()
{
	AssertReturnUnless(current_);
	Erase(files_, current_->GetPath());
	current_ = nullptr;
}

///////////////////////////////////////////////////////////////////////////////
void FileMgr::SaveCurrentAs(const wxString& path)
{
	AssertReturnUnless(current_);
	current_->SaveAs(path);
}

///////////////////////////////////////////////////////////////////////////////
WorkFile* FileMgr::GetFile(const wxString& path)
{
	auto it = files_.find(path);
	return it == files_.end() ? nullptr : &it->second;
}

///////////////////////////////////////////////////////////////////////////////
const WorkFile* FileMgr::GetFile(const wxString& path) const
{
	auto it = files_.find(path);
	return it == files_.end() ? nullptr : &it->second;
}

///////////////////////////////////////////////////////////////////////////////